module TinyGQL
  module Nodes
    class Node
      include Enumerable

      # `pos` is the position of the _end_ of a token
      attr_reader :pos

      def initialize pos
        @pos = pos
      end

      # Return the line of this node given `doc`
      def line doc
        doc[0, @pos].count("\n") + 1
      end

<%- nodes.each do |node| -%>
    def <%= node.human_name %>?; false; end
<%- end -%>
      def each(&blk)
        yield self
        children.each { |v| v.each(&blk) }
      end
    end

<%- nodes.each do |node| -%>
    class <%= node.name %> < <%= node.parent ? node.parent : "Node" %>
      <%- if node.fields.any? -%>
      attr_reader <%= node.fields.map { |v| ":" + v.name }.join(", ") %>

      def initialize <%= (["pos"] + node.fields.map(&:name)).join(", ") %>
        super(pos)
        <%- node.fields.each do |field| -%>
        @<%= field.name %> = <%= field.name %>
        <%- end -%>
      end
      <%- end -%>

      def accept viz
        viz.handle_<%= node.human_name %> self
      end

      def fold viz, seed
        viz.handle_<%= node.human_name %> self, seed
      end

      def <%= node.human_name %>?; true; end

      <%- if node.has_children? -%>
      def children
        <%= node.children %>
      end
      <%- end -%>
    end
<%- end -%>
  end
end
